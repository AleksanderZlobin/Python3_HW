# Требуется вычислить, сколько раз встречается некоторое число k в массиве list_1.
# Найдите количество и выведите его.

import re
list_1 = [1, 2, 3, 4, 5]
k = 3

# Введите ваше решение ниже
count = 0
for _ in list_1:
    if _ == k:
        count += 1
print(count)


# Требуется найти в массиве list_1 самый близкий по величине элемент к
# заданному числу k и вывести его.

list_1 = [1, 2, 3, 4, 8, 12]
k = 10

# Введите ваше решение ниже
nearest_min = list_1[0]
for i in list_1:
    if abs(i - k) < abs(nearest_min - k):
        nearest_min = i
print(nearest_min)


# В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.

# В случае с английским алфавитом очки распределяются так:

# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.
# А русские буквы оцениваются так:

# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем слова k
# и выводит его. Будем считать, что на вход подается только одно слово, которое
# содержит либо только английские, либо только русские буквы.

k = 'ноутбук'
k = k.upper()

# Введите ваше решение ниже


def isCyrillic(text):
    return bool(re.search('[а-яА-Я]', text))


points_en = {1: 'AEIOULNSTR',
             2: 'DG',
             3: 'BCMP',
             4: 'FHVWY',
             5: 'K',
             8: 'JX',
             10: 'QZ'}
points_ru = {1: 'АВЕИНОРСТ',
             2: 'ДКЛМПУ',
             3: 'БГЁЬЯ',
             4: 'ЙЫ',
             5: 'ЖЗХЦЧ',
             8: 'ШЭЮ',
             10: 'ФЩЪ'}

if isCyrillic(k):
    print(sum([k for i in k for k, v in points_ru.items() if i in v]))
else:
    print(sum([k for i in k for k, v in points_en.items() if i in v]))
