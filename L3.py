from random import randint
# Дан список чисел. Определите, сколько в нем
# встречается различных чисел.

# Определяем список в принте сразу
print(lst := [randint(-5, 5) for _ in range(10)])

print(len(set(lst)))


# Дана последовательность из N целых чисел и число
# K. Необходимо сдвинуть всю последовательность
# (сдвиг - циклический) на K элементов вправо, K –
# положительное число.

print(lst := [randint(-5, 5) for _ in range(10)])

# Решение через срезы
shift = int(input('Введите сдвиг: '))

print(lst[-shift:] + lst[:-shift])

# Решение через цикл с вырезанием последнего элемента
# и вставкой в начало списка
for i in range(shift):
    lst.insert(0, lst.pop())

print(lst)


# Бесконечный перебор списка циклом
# решает проблему выхода за пределы списка
# 100 раз переберет все элементы списка
# c первого до последнего и заново итого 100 раз

for i in range(100):
    print(lst[i % len(lst)])


# Напишите программу для печати всех уникальных
# значений в словаре.

list_1 = [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005"},
          {"VII": "S005"}, {"V": "S009"}, {"VIII": "S007"}]

nset = set()

for dct in list_1:
    print(dct.values())
    nset.add(*dct.values())  # * Распаковывает словари

print(nset)


# Дан список, состоящий из целых чисел. Напишите
# программу, которая подсчитает количество
# элементов списка, больших предыдущего (элемента
# с предыдущим номером)

print(list_2 := [randint(-5, 5) for _ in range(10)])

count = 0

for _ in range(len(list_2) - 1):
    if list_2[i+1] > list_2[i]:
        count += 1
print(count)
